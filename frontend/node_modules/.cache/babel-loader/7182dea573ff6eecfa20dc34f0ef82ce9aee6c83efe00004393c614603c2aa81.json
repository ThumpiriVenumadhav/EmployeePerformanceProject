{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\venum\\\\Desktop\\\\frontend\\\\src\\\\components\\\\PerformanceReport.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Table, ProgressBar, Card, Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PerformanceReport = () => {\n  _s();\n  const [report, setReport] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/appraisals/report\").then(response => {\n      setReport(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching report:\", error);\n      setLoading(false);\n    });\n  }, []);\n\n  // Function to assign colors based on performance category\n  const getProgressBarVariant = category => {\n    switch (category) {\n      case \"High Performers\":\n        return \"success\";\n      // Green\n      case \"Average Performers\":\n        return \"warning\";\n      // Yellow\n      case \"Low Performers\":\n        return \"danger\";\n      // Red\n      default:\n        return \"info\";\n      // Blue for unknown categories\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"p-4 shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4\",\n        children: \"Performance Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading report...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        responsive: true,\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          style: {\n            backgroundColor: \"#343a40\",\n            color: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: report ? Object.entries(report).map(([category, percentage]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n                now: parseFloat(percentage),\n                variant: getProgressBarVariant(category),\n                style: {\n                  height: \"20px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 41\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              className: \"text-center\",\n              children: \"No Data Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(PerformanceReport, \"1ASdcKNhsm3p6UTjSlDWhqGwJVc=\");\n_c = PerformanceReport;\nexport default PerformanceReport;\nvar _c;\n$RefreshReg$(_c, \"PerformanceReport\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Table","ProgressBar","Card","Spinner","jsxDEV","_jsxDEV","PerformanceReport","_s","report","setReport","loading","setLoading","get","then","response","data","catch","error","console","getProgressBarVariant","category","className","children","fileName","_jsxFileName","lineNumber","columnNumber","animation","bordered","hover","responsive","style","backgroundColor","color","Object","entries","map","percentage","now","parseFloat","variant","height","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/venum/Desktop/frontend/src/components/PerformanceReport.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Table, ProgressBar, Card, Spinner } from \"react-bootstrap\";\r\n\r\nconst PerformanceReport = () => {\r\n    const [report, setReport] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080/appraisals/report\")\r\n            .then(response => {\r\n                setReport(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching report:\", error);\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    // Function to assign colors based on performance category\r\n    const getProgressBarVariant = (category) => {\r\n        switch (category) {\r\n            case \"High Performers\": return \"success\";  // Green\r\n            case \"Average Performers\": return \"warning\";  // Yellow\r\n            case \"Low Performers\": return \"danger\";  // Red\r\n            default: return \"info\";  // Blue for unknown categories\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Card className=\"p-4 shadow-lg\">\r\n                <h2 className=\"text-center mb-4\">Performance Report</h2>\r\n                {loading ? (\r\n                    <div className=\"text-center\">\r\n                        <Spinner animation=\"border\" />\r\n                        <p>Loading report...</p>\r\n                    </div>\r\n                ) : (\r\n                    <Table bordered hover responsive className=\"mt-3\">\r\n                        <thead style={{ backgroundColor: \"#343a40\", color: \"white\" }}>\r\n                            <tr>\r\n                                <th>Category</th>\r\n                                <th>Percentage</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {report ? (\r\n                                Object.entries(report).map(([category, percentage]) => (\r\n                                    <tr key={category}>\r\n                                        <td>{category}</td>\r\n                                        <td>\r\n                                            <ProgressBar \r\n                                                now={parseFloat(percentage)} \r\n                                                variant={getProgressBarVariant(category)}\r\n                                                style={{ height: \"20px\" }}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            ) : (\r\n                                <tr>\r\n                                    <td colSpan=\"2\" className=\"text-center\">No Data Available</td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PerformanceReport;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}