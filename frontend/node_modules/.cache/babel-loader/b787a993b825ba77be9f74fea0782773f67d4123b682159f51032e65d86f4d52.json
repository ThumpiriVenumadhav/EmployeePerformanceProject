{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\venum\\\\Desktop\\\\frontend\\\\src\\\\components\\\\BellCurveChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BellCurveChart = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/appraisals/bellcurve\").then(response => {\n      const {\n        \"Expected Distribution\": expected,\n        \"Actual Distribution\": actual\n      } = response.data;\n\n      // Format data for Recharts\n      const formattedData = Object.keys(expected).map(key => ({\n        category: key,\n        Expected: parseInt(expected[key]),\n        Actual: parseInt(actual[key])\n      }));\n      setChartData(formattedData);\n    }).catch(error => console.error(\"Error fetching bell curve data:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bell Curve Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"90%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"Expected\",\n          stroke: \"#8884d8\",\n          strokeWidth: 2,\n          dot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"Actual\",\n          stroke: \"#82ca9d\",\n          strokeWidth: 2,\n          dot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(BellCurveChart, \"Leo9Xk/Ki5G6SkYc3yZESo07mWw=\");\n_c = BellCurveChart;\nexport default BellCurveChart;\nvar _c;\n$RefreshReg$(_c, \"BellCurveChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","BellCurveChart","_s","chartData","setChartData","get","then","response","expected","actual","data","formattedData","Object","keys","map","key","category","Expected","parseInt","Actual","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","type","stroke","strokeWidth","dot","_c","$RefreshReg$"],"sources":["C:/Users/venum/Desktop/frontend/src/components/BellCurveChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from \"recharts\";\r\n\r\nconst BellCurveChart = () => {\r\n    const [chartData, setChartData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080/appraisals/bellcurve\")\r\n            .then(response => {\r\n                const { \"Expected Distribution\": expected, \"Actual Distribution\": actual } = response.data;\r\n\r\n                // Format data for Recharts\r\n                const formattedData = Object.keys(expected).map(key => ({\r\n                    category: key,\r\n                    Expected: parseInt(expected[key]),\r\n                    Actual: parseInt(actual[key]),\r\n                }));\r\n\r\n                setChartData(formattedData);\r\n            })\r\n            .catch(error => console.error(\"Error fetching bell curve data:\", error));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Bell Curve Analysis</h2>\r\n            <ResponsiveContainer width=\"90%\" height={400}>\r\n                <LineChart data={chartData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"category\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Line type=\"monotone\" dataKey=\"Expected\" stroke=\"#8884d8\" strokeWidth={2} dot={false} />\r\n                    <Line type=\"monotone\" dataKey=\"Actual\" stroke=\"#82ca9d\" strokeWidth={2} dot={false} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BellCurveChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}